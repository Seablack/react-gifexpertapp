{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","hooks/useFetchGifs.js","components/GifGridItem.js","components/GifGrid.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","useFetchGifs","loading","state","setState","useEffect","then","imgs","GifGridItem","className","src","alt","GifGrid","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"oNAGMA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cACpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAcA,OACE,sBAAMC,SATa,SAACC,GACpBA,EAAEC,iBACEJ,EAAWK,OAAOC,OAAO,IAC3BR,GAAc,SAAAS,GAAI,OAAKP,GAAL,mBAAoBO,OACtCN,EAAc,MAKhB,SACE,uBACEO,KAAK,OACLC,MAAQT,EACRU,SAjBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,aAsB3BZ,EAAYe,UAAY,CACtBd,cAAee,IAAUC,KAAKC,YAEjBlB,Q,+BC/BFmB,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,4DAEL,mCACVC,EAHe,iDAGiCC,UAAUH,GAH3C,6BAEL,oCAFK,SAKFI,MAAMF,GALJ,cAKfG,EALe,gBAMAA,EAAKC,OANL,uBAMdC,EANc,EAMdA,KAEDC,EAAOD,EAAKE,KAAI,SAAAC,GAAO,IAAD,EAC1B,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAZjB,kBAgBdM,GAhBc,4CAAH,sDCsBLO,EApBM,SAACf,GAEpB,MAA0BlB,mBAAS,CACjCyB,KAAK,GACLS,SAAQ,IAFV,mBAAOC,EAAP,KAAcC,EAAd,KAeA,OAVAC,qBAAW,WACTpB,EAAQC,GACPoB,MAAK,SAAAC,GACFH,EAAS,CACDX,KAAMc,EACNL,SAAQ,SAGnB,CAAChB,IAEGiB,GCNMK,EAZK,SAAC,GAAqB,EAApBX,GAAqB,IAAjBC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAI/B,OACE,sBAAKqB,UAAU,yCAAf,UACI,qBAAKC,IAAKtB,EAAKuB,IAAKb,IACpB,4BAAIA,QCsBGc,EA3BC,SAAC,GAAgB,IAAf1B,EAAc,EAAdA,SAGhB,EAAgCe,EAAaf,GAAhCa,EAAb,EAAON,KAAcS,EAArB,EAAqBA,QAKrB,OACE,qCACE,oBAAIO,UAAU,oCAAd,SAAmDvB,IAClDgB,GAAW,mBAAGO,UAAU,mCAAb,yBACZ,qBAAKA,UAAU,YAAf,SAGMV,EAAOJ,KAAI,SAACC,GAAD,OACT,cAAC,EAAD,eAEMA,GADCA,EAAIC,aCcVgB,EA/BM,WAEnB,MAAoC7C,mBAAS,CAAC,cAA9C,mBAAO8C,EAAP,KAAmB/C,EAAnB,KAQA,OACE,qCACE,8CACA,cAAC,EAAD,CACEA,cAAeA,IAEjB,uBACA,6BAEI+C,EAAWnB,KAAI,SAAAT,GAAQ,OACrB,cAAC,EAAD,CAEEA,SAAUA,GADHA,Y,MCnBrB6B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.892dd0e4.chunk.js","sourcesContent":["\r\nimport React, { useState } from 'react'\r\nimport PropTypes from 'prop-types'\r\nconst AddCategory = ({setCategories}) => {\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  const handleInputChange = (e) =>{\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  const handleSubmit = (e) =>{\r\n    e.preventDefault();\r\n    if (inputValue.trim().length>2){\r\n      setCategories(cats => [inputValue, ...cats]);\r\n      setInputValue('');\r\n    }\r\n\r\n  }\r\n  return (\r\n    <form onSubmit={handleSubmit}>\r\n      <input\r\n        type=\"text\"\r\n        value={ inputValue }\r\n        onChange = {handleInputChange}\r\n      />\r\n    </form>\r\n  )\r\n}\r\n\r\nAddCategory.prototype = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\nexport default AddCategory;\r\n\r\n","\r\nexport const getGifs = async (category) => {\r\n  \r\n  const api_key = 'AxnTsCOFwitTRZRTREryZQXZICc3GSFQ';\r\n  const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=${api_key}`\r\n\r\n  const resp = await fetch(url);\r\n  const {data} = await resp.json();\r\n\r\n  const gifs = data.map(img =>{\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images?.downsized_medium.url\r\n\r\n    }\r\n  })\r\n  return gifs;\r\n}\r\n\r\n","import { useEffect } from \"react\";\r\nimport { useState } from \"react\"\r\nimport { getGifs } from '../helpers/getGifs';\r\nconst useFetchGifs = (category) => {\r\n\r\n  const [state, setState] = useState({\r\n    data:[],\r\n    loading:true\r\n  })\r\n\r\n  useEffect( () => {\r\n    getGifs(category)\r\n    .then(imgs =>{\r\n        setState({\r\n                data: imgs,\r\n                loading:false\r\n        })\r\n    })\r\n  }, [category])\r\n\r\n  return state; //{data[], true};\r\n};\r\n\r\nexport default useFetchGifs;\r\n\r\n","import React from 'react'\r\n\r\nconst GifGridItem = ({id, title, url}) => {\r\n\r\n  //console.log(id, title, url);\r\n\r\n  return (\r\n    <div className=\"card animate__animated animate__fadeIn\">\r\n        <img src={url} alt={title}/>\r\n        <p>{title}</p>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default GifGridItem;\r\n","import React from 'react'\r\nimport useFetchGifs  from '../hooks/useFetchGifs';\r\nimport GifGridItem from './GifGridItem';\r\n\r\nconst GifGrid = ({category}) => {\r\n\r\n\r\n  const {data: images, loading} = useFetchGifs(category);\r\n  // useEffect( () => {\r\n  //   getGifs(category)\r\n  //     .then (setImages)\r\n  // },[category])\r\n  return (\r\n    <>\r\n      <h3 className=\"animate__animated animate__fadeIn\">{category}</h3>\r\n      {loading && <p className=\"animate__animated animate__flash\">Loading....</p>}\r\n      <div className=\"card-grid\">\r\n\r\n          {\r\n            images.map((img) => (\r\n              <GifGridItem\r\n                key={img.id}\r\n                {...img}/>\r\n            ))\r\n          }\r\n      </div>\r\n    </>\r\n\r\n  )\r\n}\r\n\r\nexport default GifGrid;\r\n","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory'\r\nimport GifGrid from './components/GifGrid'\r\n\r\nconst GifExpertApp = () => {\r\n  //const categories = ['One Punch', 'Samurai X', 'Dragon Ball'];\r\n  const [categories, setCategories] = useState(['One Punch'])\r\n  //const handleAdd = () =>{\r\n\r\n  //  //setCategories([...categories, 'HunterXHunter']);\r\n  //  setCategories(catgs => [...catgs, 'HunterXHunter'])\r\n  // }\r\n\r\n\r\n  return (\r\n    <>\r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory\r\n        setCategories={setCategories}\r\n      />\r\n      <hr />\r\n      <ol>\r\n        {\r\n          categories.map(category =>(\r\n            <GifGrid\r\n              key = {category}\r\n              category={category}\r\n            />)\r\n          )\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default GifExpertApp;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\n\nReactDOM.render(\n\n  <GifExpertApp />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}